# dwains_theme

- path: dynamic_page
  {% if _d_t_config.dynamic_page and _d_t_config.dynamic_page.addon %}
  icon: {{ _d_t_config.dynamic_page.addon.icon|default(_d_t_icons.menu_cameras)|default('mdi:cctv') }}
  title: {{ _d_t_config.dynamic_page.addon.name|default(_d_t_trans.cameras.title) }}
  {% else %}
  icon: {{ _d_t_icons.menu_cameras|default('mdi:cctv') }}
  title: {{ _d_t_trans.cameras.title }}
  {% endif %}
  panel: true
  cards:    
    - type: custom:mod-card
      style: | 
        ha-card {
          max-width: 1465px;
          padding-bottom: 50px;
          margin: 0 auto;
        }
      card:
        type: vertical-stack
        cards:
          #Header
          - !include
            - ../partials/header.yaml
            {% if _d_t_config.dynamic_page and _d_t_config.dynamic_page.addon %}
            - title: {{ _d_t_config.dynamic_page.addon.name|default(_d_t_trans.cameras.title) }}
            {% else %}
            - title: {{ _d_t_trans.cameras.title }}
            {% endif %}
          #Start for dynamic page
          {% if _d_t_config.dynamic_page and _d_t_config.dynamic_page.addon %}
          - type: custom:mod-card
            style: |
              ha-card {
                padding-bottom: 20px;
                padding-left: 11px;
              }
            card:
              #Dynamic addon
              type: vertical-stack
              cards:
                !include 
                  - ../../../{{ _d_t_config.dynamic_page.addon.path }}
                  - name: {{ _d_t_config.dynamic_page.addon.name }}
                    {% if _d_t_config.dynamic_page.addon.data %}
                    data: '{{ _d_t_config.dynamic_page.addon.data|tojson }}'
                    {% endif %}
          {% else %}
          #Cameras
          - type: custom:dwains-flexbox-card
            items_classes: 'col-xs-12 col-sm-6 col-md-6 col-lg-6'
            padding: true
            cards:
              {% for camera in _d_t_config.cameras %}
              - camera_view: live
                entity: {{ camera["entity"] }}
                type: picture-entity
              {% else %}
              - type: markdown
                content: {{ _d_t_trans.cameras.not_defined }}
              {% endfor %}
            {% endif %}