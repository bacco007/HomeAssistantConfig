# dwains_theme

- title: {{ _d_t_trans.scenes.title }}
  path: scenes
  icon: {{ _d_t_icons.menu_scenes|default('mdi:play-circle-outline') }}
  panel: true
  cards:    
    - type: custom:mod-card
      style: | 
        ha-card {
          max-width: 1465px;
          padding-bottom: 50px;
          margin: 0 auto;
        }
      card:
        type: vertical-stack
        cards:
          #Header
          - !include
            - ../partials/header.yaml
            - title: {{ _d_t_trans.scenes.title }}
          #Start for scenes page
          #Scenes
          - type: custom:dwains-flexbox-card
            items_classes: 'col-xs-6 col-sm-4 col-md-3 col-lg-2'
            padding: true
            cards:
            {% for scene in _d_t_config.scenes %}
              - type: custom:button-card
                template: scene
                entity: {{ scene["entity"] }}   
                icon: '{{ scene["icon"]|default('far:play-circle') }}'
                {% if scene["entity"].split('.')[0] == 'scene' %}
                # its a scene entity
                tap_action: 
                  haptic: light
                  action: call-service
                  service: scene.turn_on
                  service_data:
                    entity_id: {{ scene["entity"] }}
                styles:
                  {% if scene["background"] %}
                  img_cell:
                    - background: '{{ scene["background"] }}'
                  {% endif %}
                  {% if scene["icon_color"] %}
                  icon:
                    - color: '{{ scene["icon_color"] }}'
                  {% else %}
                  icon:
                    - color: 'var(--dwains-theme-header-text)'
                  {% endif %}
                {% elif scene["entity"].split('.')[0] == 'input_select' %}
                # its a input_select entity
                show_state: true
                tap_action:
                  haptic: light
                  action: more-info
                double_tap_action:
                  haptic: light
                  action: call-service
                  service: input_select.select_next
                  service_data:
                    entity_id: {{ scene["entity"] }}
                styles:
                  {% if scene["background"] %}
                  img_cell:
                    - background: '{{ scene["background"] }}'
                  {% endif %}
                  {% if scene["icon_color"] %}
                  icon:
                    - color: '{{ scene["icon_color"] }}'
                  {% else %}
                  icon:
                    - color: 'var(--dwains-theme-header-text)'
                  {% endif %}
                  grid:
                    - grid-template-areas: '"i n""i s"'
                {% else %}
                # its something else then a scene entity
                show_state: true
                tap_action:
                  haptic: light
                  action: toggle
                styles:
                  {% if scene["background"] %}
                  img_cell:
                    - background: '{{ scene["background"] }}'
                  {% endif %}
                  {% if scene["icon_color"] %}
                  icon:
                    - color: '{{ scene["icon_color"] }}'
                  {% else %}
                  icon:
                    - color: 'var(--dwains-theme-header-text)'
                  {% endif %}
                  grid:
                    - grid-template-areas: '"i n""i s"'
                {% endif %}
            {% else %}
            - type: markdown
              content: {{ _d_t_trans.scenes.not_defined }}
            {% endfor %}