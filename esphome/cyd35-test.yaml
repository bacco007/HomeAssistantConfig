esphome:
  name: "cyd35-test"
  friendly_name: cyd35_test
  min_version: 2025.5.0
  name_add_mac_suffix: false

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # manual_ip:
  #   static_ip: ${ip_address}
  #   gateway: ${ip_gw}
  #   subnet: ${ip_netmask}
  # ap:
  #   ssid: ${esphome_name} Fallback"
  #   password: !secret ap_password

captive_portal:

web_server:
  port: 80

font:
  - file:
      type: gfonts
      family: Roboto
    id: roboto_large
    size: 48
    bpp: 4
  - file:
      type: gfonts
      family: Roboto
    id: roboto_small
    size: 14
    bpp: 4    

color:
  - id: white
    hex: ffffff
  - id: ha_blue
    hex: 51c0f2

globals:
  - id: display_hello
    type: bool
    initial_value: 'true'

output:
  - id: backlight_pwm
    platform: ledc
    pin: 21
  - id: output_red
    platform: ledc
    pin: 4
    inverted: true
  - id: output_green
    platform: ledc
    pin: 16
    inverted: true
  - id: output_blue
    platform: ledc
    pin: 17
    inverted: true

light:
  - id: backlight
    platform: monochromatic
    output: backlight_pwm
    name: Display Backlight
    restore_mode: ALWAYS_ON
  - id: led
    platform: rgb
    red: output_red
    green: output_green
    blue: output_blue
    restore_mode: ALWAYS_OFF
    
i2c:
  - sda: 27
    scl: 22
    scan: true

spi:
  - id: tft
    clk_pin: 14
    mosi_pin: 13
    miso_pin:
      number: 12
      ignore_strapping_warning: true
  - id: touch
    clk_pin: 25
    mosi_pin: 32
    miso_pin: 39

display:
  - platform: ili9xxx
    model: ILI9341
    spi_id: tft
    cs_pin:
      number: 15
      ignore_strapping_warning: true
    dc_pin:
      number:  2
      ignore_strapping_warning: true
    invert_colors: false
    update_interval: never
    auto_clear_enabled: false
    color_palette: 8BIT
    # rotation: 90
    transform:            # added this line
      swap_xy: true
      mirror_x: false
    dimensions:           #added this line
      height: 320
      width: 240
    lambda: |-
      it.fill(id(Color::BLACK));
      it.print(0, 60, id(roboto_small), TextAlign::TOP_LEFT, "35");
      it.print(0, 105, id(roboto_small), TextAlign::CENTER_LEFT, "30");
      it.print(0, 150, id(roboto_small), TextAlign::CENTER_LEFT, "25");
      it.print(0, 195, id(roboto_small), TextAlign::CENTER_LEFT, "20");
      it.print(0, 240, id(roboto_small), TextAlign::BOTTOM_LEFT, "15");
      if (id(temperature).has_state()) {
        it.printf(160, 0, id(roboto_large), TextAlign::TOP_CENTER, "%.1f Â°C", id(temperature).state);
      }
      it.graph(20, 60, id(officegraph));

touchscreen:
  platform: xpt2046
  id: my_touchscreen
  spi_id: touch
  cs_pin: GPIO33
  interrupt_pin: GPIO36
  calibration:
    x_min: 231
    x_max: 3646
    y_min: 388
    y_max: 3830
  transform:
    swap_xy: true
  on_touch:
    lambda: |-
      id(display_hello) = !id(display_hello);
  # on_touch:
  #   - lambda: |-
  #         ESP_LOGI("cal", "x=%d, y=%d, x_raw=%d, y_raw=%0d",
  #           touch.x,
  #           touch.y,
  #           touch.x_raw,
  #           touch.y_raw
  #         );

graph:
  - id: officegraph
    sensor: temperature
    duration: 1h
    width: 300
    height: 180
    x_grid: 10min
    y_grid: 5.0
    max_value: 35.0
    min_value: 15.0
    color: ha_blue

sensor:
  - platform: homeassistant
    id: temperature
    entity_id: sensor.weather_temperature
    internal: true    